CGRA151 Project ReportStudent name: hawinklukeStudent ID: 300504608Name of game/artwork: Mario Style Platform GameVisionThe vison for this game was to create a simple Mario like platform game. This changed somewhat during production to make it more Mario like, including the use of a (free to use) Mario Image as the player and a similarly styled projectile/fireball. The aesthetic vision for that game was to have a partially realistic background, obstacle and platform. During the creation of the game the vision was expanded by adding statistics and other graphics such as the win,  lose and level up images. AchievementThis game was able to achieve the following. Reliable and intuitive/mildly interesting statistics have been implemented. The game physics are relatively accurate. E.G. The player jumps in a way that look mostly real, when the player hits an obstacle or platform they stop and the projectile causes obstacles and platforms to take damage when necessary. The game also has multiple levels with the difficulty varying between each level the platforms, background, obstacles and sprite are all rendered using images to make them look nicer.Technical ChallengesOne technical challenge faced was implementing realistic looking jumps. This was achieved by using time of flight, flight cut-off and gravity variables. When the player jumps their vertical velocity continually decreases until the flight cut-off timer is reached. At his point gravity begins to increase in the inverse direction, thus making the player fall. Another technical challenge faced was detecting collision events between objects such as the player, platforms, projectiles, obstacles and the edge of the screen. This was addressed by comparing the x and y parameters of each object to those of the other in order to decide if a collision had taken place. A third technical challenge was controlling the behaviour of the platforms at different levels. To overcome this problem, various parameters controlling the platform speed, width, horizontal separation and vertical separation were stored in arraylist which the program would access based on the current level.ReflectionThis was slightly more difficult than I expected it to be. Getting the platforms to work properly based on the level and ensuring that the player spawned at the correct time were both much more challenging than I had anticipated. However, both the collision detection and level up capability were much easier than I thought. The final outcome matches the game plan very well. The background and all objects in the game have been textured to make them look better as specified by the plan. If anything was to be done differently, I think it would be the level progression. At the moment the levels get harder very quickly and I think further iterations of this game should make this slower in order to make the game a more pleasurable experience.